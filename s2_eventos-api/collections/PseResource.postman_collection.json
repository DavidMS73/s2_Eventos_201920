{
	"info": {
		"_postman_id": "d227da95-b78c-4bc9-a6d3-d484313a2c13",
		"name": "PseResource",
		"description": "Colección de pruebas sobre el recurso Pse",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "368f631f-dfa1-446f-8d44-6d5fc9fb53bc",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_e\", data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Juan\",\n\t\"correo\":\"juddsjkj@uniandes.edu.co\",\n\t\"contrasena\":\"1234567\",\n\t\"codigoQR\":\"fotol.png\",\n\t\"tipo\":\"Responsable\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/usuarios/",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"usuarios",
						""
					]
				},
				"description": "Añade un usuario"
			},
			"response": []
		},
		{
			"name": "Crear y asociar un pse a un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d3d859b3-ccb9-4c88-9e78-0610744ee072",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a1\", data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"correo\": \"123@uniandes.edu.co\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/usuarios/{{new_id_e}}/pse",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"usuarios",
						"{{new_id_e}}",
						"pse"
					]
				},
				"description": "Crea un nuevo pse. El Id es inicializado por la BD y se debe ver en la respuesta. El pse es asociado al usuario creado antes.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección."
			},
			"response": []
		},
		{
			"name": "Crear y asociar un pse a un usuario 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d3d859b3-ccb9-4c88-9e78-0610744ee072",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a2\", data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"correo\": \"456@uniandes.edu.co\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/usuarios/{{new_id_e}}/pse",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"usuarios",
						"{{new_id_e}}",
						"pse"
					]
				},
				"description": "Crea un nuevo pse. El Id es inicializado por la BD y se debe ver en la respuesta. El pse es asociado al usuario  creado antes.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener un pse de un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e7e73fe8-8e21-4eae-a1bf-973c5ccfbfbc",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/usuarios/{{new_id_e}}/pse/{{new_id_a1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"usuarios",
						"{{new_id_e}}",
						"pse",
						"{{new_id_a1}}"
					]
				},
				"description": "Consulta un pse de un usuario en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del pse y del usuario a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener un pse que no existe de un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9fe51cc4-6ef5-40d2-bc5f-e1200af00028",
						"exec": [
							"tests[\"No se debería obtener ningún pse ya que el pse no existe.\"] = responseCode.code === 404;",
							"let id = pm.variables.get(\"new_id_e\");",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /usuarios/\"+id+\"/pse/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/usuarios/{{new_id_e}}/pse/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"usuarios",
						"{{new_id_e}}",
						"pse",
						"0"
					]
				},
				"description": "Consulta un pse que no existe de un usuario en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error.\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Obtener los pse de un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ac01013b-6ea4-474f-adf3-724652d90aa2",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/usuarios/{{new_id_e}}/pse",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"usuarios",
						"{{new_id_e}}",
						"pse"
					]
				},
				"description": "Consulta los pse de un usuario en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del usuario a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Borrar un pse",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "528d0e34-f787-4adc-8122-db7409e4df9f",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/usuarios/{{new_id_e}}/pse/{{new_id_a1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"usuarios",
						"{{new_id_e}}",
						"pse",
						"{{new_id_a1}}"
					]
				},
				"description": "Borra la asociación entre un pse y un usuario y borra el pse. Se envían los ids del usuario y del pse creados anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un pse que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db442b05-4aea-4f64-9db1-a28176069f5e",
						"exec": [
							"tests[\"No se puede borrar un pse que no existe.\"] = responseCode.code === 404;",
							"let id = pm.variables.get(\"new_id_e\");",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /usuarios/\"+id+\"/pse/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/usuarios/{{new_id_e}}/pse/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"usuarios",
						"{{new_id_e}}",
						"pse",
						"0"
					]
				},
				"description": "Borra un pse que no existe en un usuario en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error.\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrar un pse 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "528d0e34-f787-4adc-8122-db7409e4df9f",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/usuarios/{{new_id_e}}/pse/{{new_id_a2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"usuarios",
						"{{new_id_e}}",
						"pse",
						"{{new_id_a2}}"
					]
				},
				"description": "Borra la asociación entre un pse y un usuario y borra el pse. Se envían los ids del usuario y del pse creados anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d403e21b-3da3-4bbc-9b8a-9a2285ec0292",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/usuarios/{{new_id_e}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"usuarios",
						"{{new_id_e}}"
					]
				},
				"description": "Borra un usuario. Se envía el id del usuario creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f9cd3dc5-0f0e-4fd2-8cc1-6c7cc18869fa",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2d28a682-3be7-4527-9ff9-079aaa85342e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}