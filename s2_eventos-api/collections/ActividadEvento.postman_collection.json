{
	"info": {
		"_postman_id": "925478b2-ef10-4779-ad83-fbffe8755086",
		"name": "ActividadEvento",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear un evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "694741e6-4794-48fd-b32b-d790963ac9b0",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_e\", data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Fopre\",\n\t\"categoria\": \"General\",\n\t\"descripcion\": \"Evento para recaudar fondos\",\n\t\"fechaInicio\": \"2020-09-07T00:00:00-08:00\",\n\t\"fechaFin\": \"2020-09-11T00:00:00-17:00\",\n\t\"detallesAdicionales\": \"Ayudar a los estudiantes\",\n\t\"entradasRestantes\": 1000,\n\t\"esPago\": \"false\",\n\t\"valor\": 0\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/eventos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"eventos"
					]
				},
				"description": "Crea un nuevo evento. El Id es inicializado por la BD y se debe ver en la respuesta.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crear una Multimedia",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ba613603-aed8-475f-bfee-d9645542f019",
						"exec": [
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\":\"EstereoPicnic\",\n\t\"tipo\" : \"festival\",\n\t\"url\" : \"https://static.iris.net.co/semana/upload/images/2014/4/2/382401_17517_1.jpg\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/multimedias",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"multimedias"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear una actividad",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d3d859b3-ccb9-4c88-9e78-0610744ee072",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a1\", data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Actividad1\",\n\t\"descripcion\": \"La primera actividad\",\n\t\"horaInicio\": \"08:00\",\n\t\"horaFin\": \"17:00\",\n\t\"fecha\": \"2020-09-11T00:00:00-17:00\",\n\t\"evento\": { \"id\": {{new_id_e}} },\n\t\"multimedia\": { \"id\": {{new_id_m}} }\n\t\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/actividadesEvento",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"actividadesEvento"
					]
				},
				"description": "Crea una nueva actividad. El Id es inicializado por la BD y se debe ver en la respuesta. La actividad es asociada al evento creado antes.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crear una actividad 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d3d859b3-ccb9-4c88-9e78-0610744ee072",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a2\", data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Actividad2\",\n\t\"descripcion\": \"La secunda actividad\",\n\t\"horaInicio\": \"09:00\",\n\t\"horaFin\": \"16:00\",\n\t\"fecha\": \"2020-09-11T00:00:00-17:00\",\n\t\"evento\": { \"id\": {{new_id_e}} }\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/actividadesEvento",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"actividadesEvento"
					]
				},
				"description": "Crea una nueva actividad. El Id es inicializado por la BD y se debe ver en la respuesta. La actividad es asociada al evento creado antes.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crear una actividad con evento que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4acd1375-1d39-4524-9719-76c3a1d4e261",
						"exec": [
							"tests[\"No crea con evento que no existe\"] = responseCode.code === 412;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El evento es inválido\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Actividad3\",\n\t\"descripcion\": \"La secunda actividad\",\n\t\"horaInicio\": \"09:00\",\n\t\"horaFin\": \"16:00\",\n\t\"fecha\": \"2020-09-11T00:00:00-17:00\",\n\t\"evento\": { \"id\": 0 }\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/actividadesEvento",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"actividadesEvento"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea una nueva actividad pero con un evento que no existe. Verifica que se genera el error y el mensaje \"El evento es inválido\".\r\n\r\n**Código HTTP esperado: 412 Precondition failed\".**"
			},
			"response": []
		},
		{
			"name": "Obtener todas las actividades",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f3881da6-5ce6-40e1-b5be-71111aa954f9",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Get all\"] = responseCode.code === 200;",
							"tests[\"actividades count\"] = data.length >= 0;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/actividadesEvento",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"actividadesEvento"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta todas las actividades de la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nPara la prueba, se verifica que el conjunto de actividades en la respuesta tenga mas de uno.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener una actividad",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b671f4fd-2e8e-4662-a534-d450acfc06d0",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/actividadesEvento/{{new_id_a1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"actividadesEvento",
						"{{new_id_a1}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta una actividad de la aplicación.  \r\nLa petición no tiene cuerpo.\r\nSe envía el id de la actividad deseada por la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener una actividad que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "febd508c-10d5-415e-b52b-846b9e059291",
						"exec": [
							"tests[\"No consulta con id que no existe\"] = responseCode.code === 404; ",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /actividadesEvento/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/actividadesEvento/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"actividadesEvento",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta una actividad que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /actividadesEvento/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Editar una actividad que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1fe4e1cc-8b1e-48a6-b194-f17a6a2fc158",
						"exec": [
							"tests[\"No actualiza con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /actividadesEvento/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Actividad0\",\n\t\"descripcion\": \"La primera actividad\",\n\t\"horaInicio\": \"08:00\",\n\t\"horaFin\": \"17:00\",\n\t\"fecha\": \"2020-09-11T00:00:00-17:00\",\n\t\"evento\": { \"id\": {{new_id_e}} }\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/actividadesEvento/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"actividadesEvento",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\nActualiza una actividad que no existe. \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /actividadesEvento/0 no existe.\".\r\n\r\n**Código HTTP esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Editar una actividad",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1077a573-437a-4a11-9b9a-87cb45264001",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Actividad1\",\n\t\"descripcion\": \"La primera actividad modificada\",\n\t\"horaInicio\": \"09:00\",\n\t\"horaFin\": \"18:00\",\n\t\"fecha\": \"2020-09-11T00:00:00-17:00\",\n\t\"evento\": { \"id\": {{new_id_e}} },\n\t\"multimedia\": { \"id\": {{new_id_m}} }\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/actividadesEvento/{{new_id_a1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"actividadesEvento",
						"{{new_id_a1}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza un libro existente. \r\nse envía el Id en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Borrar una actividad",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "528d0e34-f787-4adc-8122-db7409e4df9f",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/actividadesEvento/{{new_id_a1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"actividadesEvento",
						"{{new_id_a1}}"
					]
				},
				"description": "Borra la asociación entre una actividad y un evento y borra la actividad. Se envía el id de la actividad creada anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar una actividad que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db442b05-4aea-4f64-9db1-a28176069f5e",
						"exec": [
							"tests[\"No borra con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /actividadesEvento/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/actividadesEvento/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"actividadesEvento",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nBorra una actividad que no existe.\r\n\r\nPara la prueba se verifica que se genera el error.\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrar una actividad 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "528d0e34-f787-4adc-8122-db7409e4df9f",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/actividadesEvento/{{new_id_a2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"actividadesEvento",
						"{{new_id_a2}}"
					]
				},
				"description": "Borra la asociación entre una actividad y un evento y borra la actividad. Se envía el id de la actividad creada anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d403e21b-3da3-4bbc-9b8a-9a2285ec0292",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/eventos/{{new_id_e}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"eventos",
						"{{new_id_e}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un evento. Se envía el id del evento creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Eliminar Multimedia",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "febd508c-10d5-415e-b52b-846b9e059291",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/multimedias/{{new_id_m}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"multimedias",
						"{{new_id_m}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "2c2d3ec7-651a-4f22-8514-7305378ab205",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "98f195ba-6d7b-4843-991b-4f06d6a8644b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}