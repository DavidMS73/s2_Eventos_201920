{
	"info": {
		"_postman_id": "01e16455-89d6-4166-baab-31f0c1d23179",
		"name": "EventoPatrociniosTests",
		"description": "Colección de pruebas sobre el recurso EventoPatrocinios",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear un patrocinio",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "77f614aa-9eec-40e6-8f5f-5534c7093171",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"empresa\": \"Fopre\",\n\t\"tipo\": \"General\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/patrocinios",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"patrocinios"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un patrocinio 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "77f614aa-9eec-40e6-8f5f-5534c7093171",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a2\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"empresa\": \"Uniandes\",\n\t\"tipo\": \"Gold\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/patrocinios",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"patrocinios"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "694741e6-4794-48fd-b32b-d790963ac9b0",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_b\", data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Fopre\",\n\t\"categoria\": \"General\",\n\t\"descripcion\": \"Evento para recaudar fondos\",\n\t\"fechaInicio\": \"2020-09-07T00:00:00-08:00\",\n\t\"fechaFin\": \"2020-09-11T00:00:00-17:00\",\n\t\"detallesAdicionales\": \"Ayudar a los estudiantes\",\n\t\"entradasRestantes\": 1000,\n\t\"valor\": 0,\n\t\"imagen\": \"123.jpg\"\n}\n\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/eventos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"eventos"
					]
				},
				"description": "**Release: Ciclo 1**\r\n\r\nCrea un nuevo evento. El Id es inicializado por la BD y se debe ver en la respuesta.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Agregar un patrocinio a un evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f699e691-caae-4b2e-9c24-4a8ce09969ab",
						"exec": [
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/eventos/{{new_id_b}}/patrocinios/{{new_id_a}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"eventos",
						"{{new_id_b}}",
						"patrocinios",
						"{{new_id_a}}"
					]
				},
				"description": "Asocia un patrocinio a un evento en la aplicación. \r\n\r\nSe envía el Id del patrocinio y el del evento a asociar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Agregar un patrocinio que no existe a un evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "408c8842-0532-48cb-9a69-a64339c672cf",
						"exec": [
							"tests[\"No deberia asociar al patrocinio ya que el patrocinio no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /patrocinios/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/eventos/{{new_id_b}}/patrocinios/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"eventos",
						"{{new_id_b}}",
						"patrocinios",
						"0"
					]
				},
				"description": "Asocia un patrocinio que no existe a un evento en la aplicación. \r\nSe envía el Id del patrocinio y el del evento a asociar en la URL de la petición.\r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /patrocinios/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Obtener un patrocinio de un evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d6e646f-022a-4d41-855b-fa662aa1a3a2",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"no genera error en el Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/eventos/{{new_id_b}}/patrocinios/{{new_id_a}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"eventos",
						"{{new_id_b}}",
						"patrocinios",
						"{{new_id_a}}"
					]
				},
				"description": "Consulta un patrocinio de un evento en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del patrocinio y del evento a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener un patrocinio que no existe de un evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4356c2c8-7242-40aa-ad6d-2349cfdd45df",
						"exec": [
							"tests[\"No deberia obtener el patrocinio ya que el patrocinio no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /patrocinios/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/eventos/{{new_id_b}}/patrocinios/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"eventos",
						"{{new_id_b}}",
						"patrocinios",
						"0"
					]
				},
				"description": "Consulta un patrocinio que no existe de un evento en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error.\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Asociar patrocinios a un evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3374dff-9bc4-4781-9d8b-11c920e28d41",
						"exec": [
							"tests[\"no genera error en el Put\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n    \"id\": {{new_id_a}},\n\t\"nombre\": \"Juan\",\n\t\"correo\":\"juan1@uniandes.edu.co\",\n\t\"contrasena\":\"1234567\",\n\t\"codigoQR\":\"fotol.png\",\n\t\"tipo\":\"Responsable\"\n},\n{\n    \"id\": {{new_id_a2}},\n    \"nombre\": \"Juan Pedraza\",\n\t\"correo\":\"juan2@uniandes.edu.co\",\n\t\"contrasena\":\"234567\",\n\t\"codigoQR\":\"foto2.png\",\n\t\"tipo\":\"Asistente\"\n}]"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/eventos/{{new_id_b}}/patrocinios",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"eventos",
						"{{new_id_b}}",
						"patrocinios"
					]
				},
				"description": "Actualiza la lista de patrocinios a un evento existente.\r\n\r\nSe envía el Id en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Asociar usuarios a un evento que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "33095ce1-2210-4699-b02f-239aac70ecc2",
						"exec": [
							"tests[\"No se deberian asociar los patrocinios ya que el evento no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /eventos/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n    \"birthDate\": \"1927-03-03T00:00:00-05:00\",\n    \"description\": \"fue un escritor, guionista, editor y periodista colombiano. En 1982 recibiÃ³ el Premio Nobel de Literatura.\",\n    \"id\": {{new_id_a}},\n    \"image\": \"https://commons.wikimedia.org/wiki/File:Gabriel_Garcia_Marquez.jpg\",\n    \"name\": \"Gabriel JosÃ© de la Concordia GarcÃ\\u00ada MÃ¡rquez\"\n},\n{\n    \"birthDate\": \"1966-07-22T00:00:00-05:00\",\n    \"description\": \"fue un escritor, guionista, editor y periodista colombiano..\",\n    \"id\": {{new_id_a2}},\n    \"image\": \"https://commons.wikimedia.org/wiki/File:Descargakoj.jpg\",\n    \"name\": \"Gustavo Bolivar Moreno\"\n}]"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/eventos/0/patrocinios",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"eventos",
						"0",
						"patrocinios"
					]
				},
				"description": "Actualiza la lista de usuarios de un evento que no existe. \r\n\r\nSe envía el Id en la URL de la petición.\r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /eventos/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Obtener los patrocinios de un evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c07c9b3-26c7-4412-8ec8-13e2ad7549f4",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"no genera error en el Get all\"] = responseCode.code === 200;",
							"tests[\"patrocinios count - evento\"] = data.length >= 1;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/eventos/{{new_id_b}}/patrocinios",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"eventos",
						"{{new_id_b}}",
						"patrocinios"
					]
				},
				"description": "Consulta los patrocinio de un evento en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del evento y el del patrocinio a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Borrarle un patrocinio a un evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ad5a388f-7a00-4c08-9e5d-1fb74e608192",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/eventos/{{new_id_b}}/patrocinios/{{new_id_a}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"eventos",
						"{{new_id_b}}",
						"patrocinios",
						"{{new_id_a}}"
					]
				},
				"description": "Borra la asociación entre un evento y un patrocinio. Se envían los ids del patrocinio y del evento creados anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrarle un patrocinio 2 a un evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1e7ac7b-ca47-4902-815a-3f8624b069a3",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/eventos/{{new_id_b}}/patrocinios/{{new_id_a2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"eventos",
						"{{new_id_b}}",
						"patrocinios",
						"{{new_id_a2}}"
					]
				},
				"description": "Borra la asociación entre un evento y un patrocinio. Se envían los ids del patrocinio y del evento creados anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrale un patrocinio a un evento que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ab44fbbd-17d4-4b1a-b874-01632e77093a",
						"exec": [
							"tests[\"No so deberia eliminar el patrocinio ya que el evento no existe..\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /eventos/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/eventos/0/patrocinios/{{new_id_a}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"eventos",
						"0",
						"patrocinios",
						"{{new_id_a}}"
					]
				},
				"description": "Borra la asociación entre un evento que no existe y un patrocinio en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error.\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrarle un patrocinio que no existe a un evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e70c4158-c043-40d1-8f9a-8e168c4eddb2",
						"exec": [
							"tests[\"No so deberia eliminar el patrocinios ya que este no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /patrocinios/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/eventos/{{new_id_b}}/patrocinios/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"eventos",
						"{{new_id_b}}",
						"patrocinios",
						"0"
					]
				},
				"description": "Borra la asociación entre un evento y un patrocinio que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /patrocinios/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrar un patrocinio",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1a9cb860-1e8f-4f04-aafd-5aa781f20a59",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/patrocinios/{{new_id_a}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"patrocinios",
						"{{new_id_a}}"
					]
				},
				"description": "Borra un patrocinio. Se envía el id del patrocinio creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un patrocinio 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dae07995-8b23-4ef4-bafc-8d5a94c5aeb5",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/patrocinios/{{new_id_a2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"patrocinios",
						"{{new_id_a2}}"
					]
				},
				"description": "Borra un patrocinio. Se envía el id del patrocinio creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bb19272f-9f85-468d-9d81-b9cf3eb130e1",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_eventos-api/api/eventos/{{new_id_b}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_eventos-api",
						"api",
						"eventos",
						"{{new_id_b}}"
					]
				},
				"description": "Borra un evento. Se envía el id del evento creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "85289ec4-5837-4749-81e9-dd5223093547",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7d6e9d3f-dfdb-4d35-9c44-c848685b110d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}